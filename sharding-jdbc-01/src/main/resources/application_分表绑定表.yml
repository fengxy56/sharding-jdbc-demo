spring:
  shardingsphere:
    props:
      sql.show: true # 是否开启SQL显示
    datasource:
      name: ds # 指定数据源名字，多数据源以逗号分隔
      ds:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/consult?characterEncoding=utf-8
        username: root
        password: 123456
    #规则
    sharding:
      default-data-source-name: ds # 默认数据源
      # 设置绑定表
      binding-tables: t_order,t_order_item
      #binding-tables[0]: t_order,t_order_item
      tables:
        t_order:
          # 实际的数据节点(数据源名.逻辑表名)
          actual-data-nodes: ds.t_order$->{1..3}
          ## 指定t_order表的主键列，以及主键生成策略为SNOWFLAKE
          key-generator:
            column: order_id
            type: SNOWFLAKE
          ## 指定t_order的分片策略： 设置分片键和分片算法
          table-strategy:
            inline:
              sharding-column: order_id
               ## 根据order_id % 3 + 1 的结果，指定t_order的实际表
              algorithm-expression: t_order$->{order_id % 3 + 1}
        t_order_item:
          actual-data-nodes: ds.t_order_item$->{1..3}
          key-generator:
            column: order_item_id
            type: SNOWFLAKE
          table-strategy:
            inline:
              sharding-column: order_id
              algorithm-expression: t_order_item$->{order_id % 3 + 1}
